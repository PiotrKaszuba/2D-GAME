#pragma once
#include "Physical.h"


enum direction_y
{
	y_none,
	y_up,
	y_down
};

enum direction_x
{
	x_none,
	x_left,
	x_right
};


class Moving :
	public Physical
{
	protected:
	float moving_speed;
	direction_y moving_direction_y;
	direction_x moving_direction_x;
public:
	Moving();
	Moving(int ID, Sprite_Sheet_Data base, sf::Vector2f position, World<Physical> *mapa, float speed = 5.f, direction_x x = x_none, direction_y y=y_none);
	void Move(int x, int y);
	void Direct_Move(int x, int y);
	void Movement();
	void Border_Collision(World<Physical>*mapa);
	void Physical_Collision(World<Physical>*mapa);
	void change_side(side kierunek);
	void change_direction(direction_x direction);
	void change_direction(direction_y direction);
	void stop();
	virtual void update(World<Physical> *mapa);
	~Moving();
};

