#include "Animated.h"



Animated::Animated() 
{

}


Animated::Animated(int ID, Sprite_Sheet_Data base, sf::Vector2f position) : Sprite_Sheet(ID,base, position)
{
	this->animated_frame = 1;
	this->animated_side = r;
	this->animated_state = still;
	this->setOrigin((this->width + this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_size_modifier().x) / 2, (this->height + this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_size_modifier().y) / 2);

}

void Animated::Animate()
{
	if (this->animated_frame < this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_frames())
		this->animated_frame++;
	else
		this->animated_frame = 1;

	int x = this->sprite_sheet_start.x + this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_offset() + (this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_x_nr()-1 + this->animated_frame-1)*this->sprite_sheet_jump.x;
	int y = this->sprite_sheet_start.y + (this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_y_nr()-1)*this->sprite_sheet_jump.y;
	if (this->animated_side == l)
	{
		x = this->sprite_sheet_size - x - (this->width + this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_size_modifier().x);
	}

	this->setTextureRect(sf::IntRect(x, y, this->width+this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_size_modifier().x, this->height + this->sprite_sheet_animation_num[this->animated_state].Get_type_of_animation_size_modifier().y));
	
}

void Animated::update()
{
	this->Animate();
}


Animated::~Animated()
{
}
