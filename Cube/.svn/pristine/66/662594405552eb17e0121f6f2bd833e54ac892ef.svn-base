#pragma once
#include "Unit.h"

// It is an object that user controls
// stores key settings for actions

class Player :
	public Unit
{
private:
	sf::Keyboard::Key player_left;
	sf::Keyboard::Key player_right;
	sf::Keyboard::Key player_up;
	sf::Keyboard::Key player_down;
	sf::Keyboard::Key player_attack;
	sf::Keyboard::Key player_block;
	sf::Keyboard::Key player_kick;
public:
	Player();
	Player(Unit base, World<Physical> *mapa, sf::Keyboard::Key left, sf::Keyboard::Key right, sf::Keyboard::Key up, sf::Keyboard::Key down, sf::Keyboard::Key attack, sf::Keyboard::Key block, sf::Keyboard::Key kick);
	~Player();
	sf::Keyboard::Key get_player_left();
	sf::Keyboard::Key get_player_right();
	sf::Keyboard::Key get_player_up();
	sf::Keyboard::Key get_player_down();
	sf::Keyboard::Key get_player_block();
	sf::Keyboard::Key get_player_attack();
	sf::Keyboard::Key get_player_kick();

	// run this in 'player event checking' block in main or engine
	void check_event(sf::Event Event);

	virtual void update(World<Physical>*mapa);
};

