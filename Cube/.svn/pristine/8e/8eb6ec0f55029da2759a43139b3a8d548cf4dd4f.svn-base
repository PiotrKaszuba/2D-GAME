#pragma once
#include "Cube.h"

//this class reprensent a room in the cube. stores all data needed to create and control a separate room

class Room
{
private:
	sf::Vector3<char> coordinates;
	sf::Vector3<char> hint;
	dependance hint_type;
	bool hint_truth;
	bool hint_truth_loaded;
	bool room_initialized;
	bool final_room;
	Visible *background;
	Room_Feature *feature;
	char feature_value;
	char floor_type;
	bool alpha;

public:
	Room();
	~Room();
	Room(sf::Vector3<char> coordinates);
	sf::Vector3<char> get_coordinates();
	sf::Vector3<char> get_hint();
	dependance get_hint_type();
	bool get_hint_truth();
	void set_hint_truth(bool hint_truth);
	bool get_hint_truth_loaded();
	void set_hint_truth_loaded(bool hint_truth_loaded);
	bool get_room_initialized();
	bool get_final_room();
	Visible *get_background();
	Room_Feature *get_feature();
	char get_feature_value();
	char get_floor_type();
	void exit_room(World<Physical> *mapa);
	

	void initialize(World<Physical> *mapa, Cube<Room> * cube, Sprite_Sheet_Data **graphics);
	void update(World<Physical> *mapa);
	
};

